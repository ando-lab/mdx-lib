function [tf, errorMessage] = export(varargin)

options = struct(...
    'workingDirectory','./',...
    'geometryIn','geom.mat',...
    'gridIn','filter.mat',...
    'integrateIn','integrate.mat',...
    'correctIn','correct.mat',...
    'matOut','export.mat',...
    'logOut','export.log',...
    'minimumCounts',0,...
    'minimumPixels',1,...
    'binExcludedVoxels',true);

BatchProcess = proc.Batch('proc.Batch.export',options,varargin{:});
options = BatchProcess.options; % post-processed options

try % START MAIN SCRIPT
        
    BatchProcess.start();
        
    [InputGeometry,RefinedGeometry] = BatchProcess.readFromMatFile(...
        options.geometryIn,'InputGeometry','RefinedGeometry');
    
    [Grid] = BatchProcess.readFromMatFile(options.gridIn,'Grid');
    
    [bin,binExcl] = BatchProcess.readFromMatFile(...
        options.integrateIn,'bin','binExcl');
    
    [corr,corrExcl] = BatchProcess.readFromMatFile(...
        options.correctIn,'corr','corrExcl');
    
    fprintf(1,'  averaging geometry object\n');
    AverageGeometry = averageGeometry(InputGeometry,RefinedGeometry);
    
    [diffuseTable,braggTable] = exportScript(...
        1,options,AverageGeometry,Grid,bin,binExcl,corr,corrExcl);
    
    % save data
    if options.binExcludedVoxels
        BatchProcess.saveToMatFile(options.matOut,...
            'options',options,...
            'AverageGeometry',AverageGeometry,...
            'diffuseTable',diffuseTable,...
            'braggTable',braggTable);
    else
        BatchProcess.saveToMatFile(options.matOut,...
            'options',options,...
            'AverageGeometry',AverageGeometry,...
            'diffuseTable',diffuseTable);
    end

    BatchProcess.finish;
catch errorMessage
    BatchProcess.stop(errorMessage);
end

tf = BatchProcess.hasCompleted;
errorMessage = BatchProcess.errorMessage;

end