function input_geometry()
% create input geometry objects 

% diffraction geometry 
Source = geom.Source(...
        'wavelength',1,...
        'direction',[0,0,1],...
        'fractionOfPolarization',0.5,...
        'polarizationPlaneNormal',[0,1,0]);

Detector = TinyDetector(...
        'nx',201,...
        'ny',201,...
        'qx',1,...
        'qy',1,...
        'f',200,...
        'orgx',100,...
        'orgy',100,...
        'xShift',0,...
        'yShift',0,...
        'sensorMaterial','Si',...
        'sensorThickness',1,...
        'mask',true(201,201));
    
Crystal = geom.Crystal(...
        'a',30.4897,...
        'b',10,...
        'c',10,...
        'alpha',90,...
        'beta',90,...
        'gamma',90,...
        'a_axis',[30.4897,0,0],...
        'b_axis',[0,10,0],...
        'c_axis',[0,0,10]);
    
Spindle = geom.Spindle(...
        'rotationAxis',[-1,0,0],...
        'startingFrame',1,...
        'startingAngle',0,...
        'oscillationRange',1);

BkgSpindle = Spindle;
BkgSpindle.oscillationRange = 10; % same as Spindle, but 10 degrees per image


% geometry objects for reading images

CrystalImageSeries = io.ImageSeries(...
    'fileNameTemplate','images/crystal%04d.tif',...
    'fileReadFunction', @custom_read_image,...
    'headerReadFunction',@custom_read_header,...
    'frameRange',[1,360]);

BkgImageSeries = io.ImageSeries(...
    'fileNameTemplate','images/background%04d.tif',...
    'fileReadFunction', @custom_read_image,...
    'headerReadFunction',@custom_read_header,...
    'frameRange',[1,36]);


% divide dataset into wedges

frameStart = 1:10:360;
frameEnd = frameStart + 10 - 1;

frameStartBkg = 1:36;
frameEndBkg = 1:36;

IS = io.ImageSeries.empty();
RS = geom.RotationSeries.empty();

for j=1:numel(frameStart)
    frameRange = [frameStart(j),frameEnd(j)];
    IS(j) = io.ImageSeries(...
        'frameRange',frameRange,...
        'fileReadFunction',[],...
        'headerReadFunction',[]);
    RS(j) = geom.RotationSeries(Spindle);
    RS(j).seriesFrameRange = frameRange;
end

BkgIS = io.ImageSeries.empty();

for j=1:length(frameStart)
    BkgIS(j) = io.ImageSeries(...
        'frameRange',[frameStartBkg(j),frameEndBkg(j)],...
        'fileReadFunction',[],...
        'headerReadFunction',[]);
end


% prepare crystal geometry objects and save to proc/geom.mat

InputGeometry = geom.DiffractionExperiment(...
    'Crystal',Crystal,...
    'Detector',Detector,...
    'Source',Source,...
    'Spindle',Spindle);

RefinedGeometry = arrayfun(@(rs) geom.DiffractionExperiment('Spindle',rs),RS);

InputImageSeries = CrystalImageSeries;

WedgeImageSeries = IS;

save proc/geom.mat InputGeometry RefinedGeometry InputImageSeries WedgeImageSeries


% prepare background geometry objects and save to proc/geomBkg.mat

InputImageSeries = BkgImageSeries;

WedgeImageSeries = BkgIS;

save proc/geomBkg.mat InputImageSeries WedgeImageSeries

